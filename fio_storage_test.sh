#—Å–¥–µ–ª–∞–ª üí™ ‚Äî —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É, –≥–æ–Ω—è–µ—Ç –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã–µ –∏ 4-–ø–æ—Ç–æ—á–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏, –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –Ω–∞ —ç–∫—Ä–∞–Ω, –∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª (–≤ –∫–∞—Ç–∞–ª–æ–≥–µ —Ç–µ—Å—Ç–∞). –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—è–µ—Ç—Å—è, job-—Ñ–∞–π–ª –∏ –ª–æ–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è.

#!/bin/bash
# fio_storage_test.sh
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./fio_storage_test.sh /mnt/storage

set -euo pipefail

if ! command -v fio >/dev/null 2>&1; then
  echo "fio –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏: sudo apt-get update && sudo apt-get install -y fio"
  exit 1
fi

if [ $# -ne 1 ]; then
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Ç–µ—Å—Ç–∞>"
  exit 1
fi

TARGET_DIR="$1"
if [ ! -d "$TARGET_DIR" ]; then
  echo "–ö–∞—Ç–∞–ª–æ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $TARGET_DIR"
  exit 1
fi
if [ ! -w "$TARGET_DIR" ]; then
  echo "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –∫–∞—Ç–∞–ª–æ–≥: $TARGET_DIR"
  exit 1
fi

TS="$(date +%Y%m%d_%H%M%S)"
TEST_FILE="$TARGET_DIR/fio_testfile"
JOB_FILE="$TARGET_DIR/fio_job_${TS}.fio"
LOG_FILE="$TARGET_DIR/fio_results_${TS}.log"

# –ê–≤—Ç–æ-–æ—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() { rm -f "$TEST_FILE"; }
trap cleanup EXIT

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–º–æ–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å)
RUNTIME=30            # —Å–µ–∫ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
SEQ_BS=1M             # –±–ª–æ–∫ –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
RAND_BS=4k            # –±–ª–æ–∫ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
SEQ_IOD=4             # iodepth –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö
RAND_IOD=32           # iodepth –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö

cat > "$JOB_FILE" <<EOF
[global]
ioengine=libaio
direct=1
time_based=1
runtime=${RUNTIME}
group_reporting=1
filename=${TEST_FILE}

# ================= –û–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã–µ =================
[seq_read_1job]
bs=${SEQ_BS}
rw=read
iodepth=${SEQ_IOD}
numjobs=1

[seq_write_1job]
bs=${SEQ_BS}
rw=write
iodepth=${SEQ_IOD}
numjobs=1

[rand_read_1job]
bs=${RAND_BS}
rw=randread
iodepth=${RAND_IOD}
numjobs=1

[rand_write_1job]
bs=${RAND_BS}
rw=randwrite
iodepth=${RAND_IOD}
numjobs=1

[rand_rw_1job]
bs=${RAND_BS}
rw=randrw
rwmixread=70
iodepth=${RAND_IOD}
numjobs=1

# ================= –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–µ (4 jobs) =================
[seq_read_4job]
bs=${SEQ_BS}
rw=read
iodepth=${SEQ_IOD}
numjobs=4

[seq_write_4job]
bs=${SEQ_BS}
rw=write
iodepth=${SEQ_IOD}
numjobs=4

[rand_read_4job]
bs=${RAND_BS}
rw=randread
iodepth=${RAND_IOD}
numjobs=4

[rand_write_4job]
bs=${RAND_BS}
rw=randwrite
iodepth=${RAND_IOD}
numjobs=4

[rand_rw_4job]
bs=${RAND_BS}
rw=randrw
rwmixread=70
iodepth=${RAND_IOD}
numjobs=4
EOF

echo "=== FIO —Ç–µ—Å—Ç –°–•–î ===" | tee "$LOG_FILE"
echo "–ö–∞—Ç–∞–ª–æ–≥: $TARGET_DIR" | tee -a "$LOG_FILE"
echo "Job-—Ñ–∞–π–ª: $JOB_FILE" | tee -a "$LOG_FILE"
echo "–õ–æ–≥: $LOG_FILE" | tee -a "$LOG_FILE"
echo "–í—Ä–µ–º—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: ${RUNTIME} c" | tee -a "$LOG_FILE"
echo "–ù–∞—á–∞–ª–æ: $(date '+%F %T')" | tee -a "$LOG_FILE"
echo "----------------------------------------" | tee -a "$LOG_FILE"

# –ó–∞–ø—É—Å–∫ fio: –≤—ã–≤–æ–¥ –∏ –Ω–∞ —ç–∫—Ä–∞–Ω, –∏ –≤ –ª–æ–≥
fio "$JOB_FILE" | tee -a "$LOG_FILE"

echo "----------------------------------------" | tee -a "$LOG_FILE"
echo "–ì–æ—Ç–æ–≤–æ. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤: $LOG_FILE" | tee -a "$LOG_FILE"
echo "Job-—Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: $JOB_FILE" | tee -a "$LOG_FILE"


#–∫–∞–∫ –∑–∞–ø—É—Å–∫–∞—Ç—å:

#chmod +x fio_storage_test.sh
#./fio_storage_test.sh /mnt/storage
